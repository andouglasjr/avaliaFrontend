{"version":3,"file":"Essay.stories-b011d083.js","sources":["../../node_modules/@chakra-ui/textarea/dist/chunk-4IH3O7BJ.mjs","../../src/assets/img/essay/essay_svg2.svg","../../src/components/essay/Essay.jsx"],"sourcesContent":["'use client'\n\n// src/textarea.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/textarea.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\nvar Textarea = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props);\n  const { className, rows, ...rest } = omitThemingProps(props);\n  const textareaProps = useFormControl(rest);\n  const textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /* @__PURE__ */ jsx(\n    chakra.textarea,\n    {\n      ref,\n      rows,\n      ...textareaProps,\n      className: cx(\"chakra-textarea\", className),\n      __css: textareaStyles\n    }\n  );\n});\nTextarea.displayName = \"Textarea\";\n\nexport {\n  Textarea\n};\n//# sourceMappingURL=chunk-4IH3O7BJ.mjs.map","export default \"__VITE_ASSET__0a9e6230__\"","import { Flex, Text, Textarea, Button } from '@chakra-ui/react';\nimport { PencilIcon } from '../icons/Icons';\nimport essaySvg from '../../assets/img/essay/essay_svg2.svg';\nimport React, { useState, useRef } from 'react';\n\nexport default function Essay(props) {\n  const [originalTextareaValue, setOriginalTextareaValue] = useState(\"\");\n  const [textareaValue, setTextareaValue] = useState(originalTextareaValue);\n  const [isEditing, setIsEditing] = useState(false);\n  const textareaRef = useRef(null);\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n    textareaRef.current.focus();\n  };\n\n  const handleCancelClick = () => {\n    setTextareaValue(originalTextareaValue);\n    setIsEditing(false);\n  };\n\n  const handleSaveClick = () => {\n    setIsEditing(false);\n    setOriginalTextareaValue(textareaValue)\n  };\n\n  const handleTextareaChange = (event) => {\n    setTextareaValue(event.target.value);\n  };\n\n  return (\n    <Flex\n      flexDir=\"column\"\n      alignItems=\"flex-start\"\n      backgroundColor=\"neutralLight.0\"\n      border=\"1px\"\n      borderRadius=\"16px\"\n      boxShadow=\"0px 4px 6px 0px rgba(28, 31, 36, 0.16)\"\n      borderColor=\"neutralLight.2\"\n      width=\"620px\"\n      height=\"1209px\"\n    >\n      <Flex\n        width=\"620px\"\n        height=\"65px\"\n        padding=\"16.5px 24px\"\n        borderBottom=\"1px solid\"\n        borderColor=\"neutralLight.2\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Text textStyle=\"Subtitle1\">{props.essayName}</Text>\n        {isEditing ? (\n          <Flex alignItems=\"flex-start\" gap=\"16px\">\n            <Button onClick={handleCancelClick} variant=\"secondary\">Cancelar</Button>\n            <Button onClick={handleSaveClick} variant=\"primary\">Salvar</Button>\n          </Flex>\n        ) : (\n          <Button onClick={handleEditClick}><PencilIcon color=\"purple.2\" /></Button>\n        )}\n      </Flex>\n\n      <Textarea\n        _focus=\"none\"\n        rows=\"30\"\n        readOnly={!isEditing}\n        maxLength=\"1770\"\n        overflow=\"hidden\"\n        lineHeight=\"2.237\"\n        padding=\"34px 42px 40px 57px\"\n        backgroundImage={`url(${essaySvg})`}\n        flexGrow=\"1\"\n        border=\"none\"\n        resize=\"none\"\n        backgroundRepeat=\"no-repeat\"\n        backgroundSize=\"cover\"\n        value={textareaValue}\n        onChange={handleTextareaChange}\n        ref={textareaRef}\n      />\n    </Flex>\n  );\n}\n"],"names":["omit","object","keysToOmit","clone","key","omitted","Textarea","forwardRef","props","ref","styles","useStyleConfig","className","rows","rest","omitThemingProps","textareaProps","useFormControl","textareaStyles","jsx","chakra","cx","essaySvg","Essay","originalTextareaValue","setOriginalTextareaValue","useState","textareaValue","setTextareaValue","isEditing","setIsEditing","textareaRef","useRef","handleEditClick","handleCancelClick","handleSaveClick","handleTextareaChange","event","jsxs","Flex","Text","Button","PencilIcon"],"mappings":"4pBAaA,SAASA,EAAKC,EAAQC,EAAa,GAAI,CACrC,MAAMC,EAAQ,OAAO,OAAO,CAAE,EAAEF,CAAM,EACtC,UAAWG,KAAOF,EACZE,KAAOD,GACT,OAAOA,EAAMC,CAAG,EAGpB,OAAOD,CACT,CAIA,IAAIE,EAAU,CAAC,IAAK,OAAQ,SAAU,WAAW,EAC7CC,EAAWC,EAAW,CAACC,EAAOC,IAAQ,CACxC,MAAMC,EAASC,EAAe,WAAYH,CAAK,EACzC,CAAE,UAAAI,EAAW,KAAAC,EAAM,GAAGC,CAAI,EAAKC,EAAiBP,CAAK,EACrDQ,EAAgBC,EAAeH,CAAI,EACnCI,EAAiBL,EAAOb,EAAKU,EAAQL,CAAO,EAAIK,EACtD,OAAuBS,EAAG,IACxBC,EAAO,SACP,CACE,IAAAX,EACA,KAAAI,EACA,GAAGG,EACH,UAAWK,EAAG,kBAAmBT,CAAS,EAC1C,MAAOM,CACR,CACL,CACA,CAAC,EACDZ,EAAS,YAAc,WC1CvB,MAAegB,EAAA,GAAA,IAAA,IAAA,0BAAA,YAAA,GAAA,EAAA,KCKf,SAAAC,EAAAf,EAAA,CACA,KAAA,CAAAgB,EAAAC,CAAA,EAAAC,WAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,WAAAF,CAAA,EACA,CAAAK,EAAAC,CAAA,EAAAJ,WAAA,EAAA,EACAK,EAAAC,SAAA,IAAA,EAEAC,EAAA,IAAA,CACAH,EAAA,EAAA,EACAC,EAAA,QAAA,OAAA,EAGAG,EAAA,IAAA,CACAN,EAAAJ,CAAA,EACAM,EAAA,EAAA,CAAA,EAGAK,EAAA,IAAA,CACAL,EAAA,EAAA,EACAL,EAAAE,CAAA,CAAA,EAGAS,EAAAC,GAAA,CACAT,EAAAS,EAAA,OAAA,KAAA,CAAA,EAIA,OAAAC,EAAA,KAAAC,EAAA,CACA,QAAA,SACA,WAAA,aACA,gBAAA,iBACA,OAAA,MACA,aAAA,OACA,UAAA,yCACA,YAAA,iBACA,MAAA,QACA,OAAA,SAEA,SAAA,CAAAD,EAAA,KAAAC,EAAA,CACA,MAAA,QACA,OAAA,OACA,QAAA,cACA,aAAA,YACA,YAAA,iBACA,eAAA,gBACA,WAAA,SAEA,SAAA,CAAApB,EAAA,IAAAqB,EAAA,CAAA,UAAA,YAAA,SAAAhC,EAAA,UAAA,EACAqB,EACAS,EAAAA,KAAAC,EAAA,CAAA,WAAA,aAAA,IAAA,OACA,SAAA,CAAApB,MAAAsB,EAAA,CAAA,QAAAP,EAAA,QAAA,YAAA,SAAA,WAAA,QACAO,EAAA,CAAA,QAAAN,EAAA,QAAA,UAAA,SAAA,SAAA,CACA,CAAA,CAAA,QAEAM,EAAA,CAAA,QAAAR,EAAA,SAAAd,EAAAA,IAAAuB,EAAA,CAAA,MAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAEA,EAEAvB,EAAA,IAAAb,EAAA,CACA,OAAA,OACA,KAAA,KACA,SAAA,CAAAuB,EACA,UAAA,OACA,SAAA,SACA,WAAA,QACA,QAAA,sBACA,gBAAA,OAAAP,CAAA,IACA,SAAA,IACA,OAAA,OACA,OAAA,OACA,iBAAA,YACA,eAAA,QACA,MAAAK,EACA,SAAAS,EACA,IAAAL,CAAA,CACA,CAAA,CAAA,CAAA,CAGA","x_google_ignoreList":[0]}