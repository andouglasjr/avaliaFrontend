{"version":3,"file":"Toast.stories-c25344ca.js","sources":["../../node_modules/@chakra-ui/toast/dist/chunk-BFUVSDI7.mjs","../../src/components/toast/ToastFunctions.jsx","../../src/components/toast/Toast.jsx"],"sourcesContent":["'use client'\nimport {\n  useToastOptionContext\n} from \"./chunk-NMI5PSXW.mjs\";\nimport {\n  createToastFn\n} from \"./chunk-WGVGSZK2.mjs\";\n\n// src/use-toast.tsx\nimport { useChakra } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\nvar use_toast_default = useToast;\n\nexport {\n  useToast,\n  use_toast_default\n};\n//# sourceMappingURL=chunk-BFUVSDI7.mjs.map","import React, { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Flex,\n  IconButton,\n  useToast,\n  Text,\n  Spacer,\n  Box,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { XIcon, CorretFullCircleIcon } from \"../icons/Icons\";\n\nconst Toast = ({ message, type, onClose }) => {\n  const toastRef = useRef(null);\n  const toast = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 8000);\n\n    return () => clearTimeout(timer);\n  }, [onClose]);\n\n  const handleOnClose = () => {\n    onClose();\n    toast.onClose();\n  };\n\n  return (\n    <Flex\n      zIndex=\"50\"\n      ref={toastRef}\n      w=\"400px\"\n      h=\"104px\"\n      position=\"fixed\"\n      top=\"10px\"\n      right=\"24px\"\n      p={4}\n      bg={type == 'success' ? 'neutralDark.4' : '#330508'}\n      borderRadius=\"md\"\n      boxShadow=\"md\"\n      opacity=\"88%\"\n      transition=\"opacity 1s ease-in-out, transform 0.7s ease-in-out\"\n    >\n      <Flex my=\"auto\" marginLeft=\"8px\" h=\"56px\" w=\"304px\">\n        <Flex h=\"56px\" w=\"40px\">\n          <Icon color=\"ggreen.1\" boxSize=\"20px\" as={CorretFullCircleIcon} />\n        </Flex>\n        <Flex h=\"56px\" w=\"264px\">\n          <Text textStyle=\"Body1\" textColor=\"neutralLight.0\">{message}</Text>\n        </Flex>\n      </Flex>\n      <Spacer />\n      <Flex right=\"0\" maxW=\"48px\" maxH=\"104px\">\n        <IconButton\n          variant=\"off\"\n          top=\"-5px\"\n          left=\"5px\"\n          onClick={onClose}\n          icon={<XIcon boxSize=\"14px\" />}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nToast.propTypes = {\n  message: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Toast;\n","import React, { useState } from \"react\";\nimport { Button } from \"@chakra-ui/react\";\nimport Toast from \"./ToastFunctions\";\nimport PropTypes from \"prop-types\";\n\nexport const ToastAction = ({ feedBack, label, variant, type }) => {\n  const [showToast, setShowToast] = useState(false);\n\n  const handleToggleToast = () => {\n    setShowToast(!showToast);\n  };\n\n  return (\n    <div>\n      <Button variant={variant} onClick={handleToggleToast}>\n        {label}\n      </Button>\n\n      {showToast && (\n        <Toast\n          message={feedBack || \"Exemplo de mensagem do Toast\"}\n          onClose={handleToggleToast}\n          type = {type}\n        />\n      )}\n    </div>\n  );\n};\n\nToastAction.propTypes = {\n  feedback: PropTypes.string.isRequired,\n  variant: PropTypes.oneOf(['primary','secondary','ghost','link']),\n  label: PropTypes.string,\n  type: PropTypes.oneOf(['success','error'])\n};\n\nToastAction.defaultProps = {\n  feedback: \"Redação x alterada com sucesso!\",\n  label: \"Mostrar Toast\",\n  variant: \"primary\",\n  type: 'success',\n};\n"],"names":["useToast","options","theme","useChakra","defaultOptions","useToastOptionContext","useMemo","createToastFn","Toast","message","type","onClose","toastRef","useRef","useEffect","timer","jsxs","Flex","jsx","Icon","CorretFullCircleIcon","Text","Spacer","IconButton","XIcon","PropTypes","ToastAction","feedBack","label","variant","showToast","setShowToast","useState","handleToggleToast","Button"],"mappings":"g5BAWA,SAASA,EAASC,EAAS,CACzB,KAAM,CAAE,MAAAC,GAAUC,IACZC,EAAiBC,IACvB,OAAOC,EAAO,QACZ,IAAMC,EAAcL,EAAM,UAAW,CACnC,GAAGE,EACH,GAAGH,CACT,CAAK,EACD,CAACA,EAASC,EAAM,UAAWE,CAAc,CAC7C,CACA,CCRA,MAAAI,EAAA,CAAA,CAAA,QAAAC,EAAA,KAAAC,EAAA,QAAAC,KAAA,CACA,MAAAC,EAAAC,SAAA,IAAA,EACA,OAAAb,EAAA,EAEAc,EAAAA,UAAA,IAAA,CACA,MAAAC,EAAA,WAAA,IAAA,CACAJ,KACA,GAAA,EAEA,MAAA,IAAA,aAAAI,CAAA,CAAA,EACA,CAAAJ,CAAA,CAAA,EAQAK,EAAA,KAAAC,EAAA,CACA,OAAA,KACA,IAAAL,EACA,EAAA,QACA,EAAA,QACA,SAAA,QACA,IAAA,OACA,MAAA,OACA,EAAA,EACA,GAAAF,GAAA,UAAA,gBAAA,UACA,aAAA,KACA,UAAA,KACA,QAAA,MACA,WAAA,qDAEA,SAAA,CAAAM,EAAAA,KAAAC,EAAA,CAAA,GAAA,OAAA,WAAA,MAAA,EAAA,OAAA,EAAA,QACA,SAAA,CAAAC,EAAA,IAAAD,EAAA,CAAA,EAAA,OAAA,EAAA,OACA,SAAAC,EAAA,IAAAC,EAAA,CAAA,MAAA,WAAA,QAAA,OAAA,GAAAC,CAAA,CAAA,EACA,EACAF,EAAA,IAAAD,EAAA,CAAA,EAAA,OAAA,EAAA,QACA,SAAAC,EAAA,IAAAG,EAAA,CAAA,UAAA,QAAA,UAAA,iBAAA,UAAA,CAAA,EACA,CAAA,EACA,QACAC,EAAA,EAAA,QACAL,EAAA,CAAA,MAAA,IAAA,KAAA,OAAA,KAAA,QACA,SAAAC,EAAA,IAAAK,EAAA,CACA,QAAA,MACA,IAAA,OACA,KAAA,MACA,QAAAZ,EACA,KAAAO,EAAAA,IAAAM,EAAA,CAAA,QAAA,MAAA,CAAA,CAAA,CAAA,EAEA,CAAA,CAAA,CAAA,CAGA,EAEAhB,EAAA,UAAA,CACA,QAAAiB,EAAA,OAAA,WACA,QAAAA,EAAA,KAAA,UACA,2LClEA,MAAAC,EAAA,CAAA,CAAA,SAAAC,EAAA,MAAAC,EAAA,QAAAC,EAAA,KAAAnB,KAAA,CACA,KAAA,CAAAoB,EAAAC,CAAA,EAAAC,WAAA,EAAA,EAEAC,EAAA,IAAA,CACAF,EAAA,CAAAD,CAAA,CAAA,EAGA,cACA,MACA,CAAA,SAAA,CAAAZ,EAAA,IAAAgB,EAAA,CAAA,QAAAL,EAAA,QAAAI,EACA,SACAL,EAAA,EAEAE,GACAZ,EAAA,IAAAV,EAAA,CACA,QAAAmB,GAAA,+BACA,QAAAM,EACA,KAAAvB,CAAA,CACA,CAEA,CAAA,CAAA,CAEA,EAEAgB,EAAA,UAAA,CACA,SAAAD,EAAA,OAAA,WACA,QAAAA,EAAA,MAAA,CAAA,UAAA,YAAA,QAAA,MAAA,CAAA,EACA,MAAAA,EAAA,OACA,KAAAA,EAAA,MAAA,CAAA,UAAA,OAAA,CAAA,CACA,EAEAC,EAAA,aAAA,CACA,SAAA,kCACA,MAAA,gBACA,QAAA,UACA,KAAA,SACA;;;;;","x_google_ignoreList":[0]}